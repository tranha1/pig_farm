version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: pig_farm_db_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: pig_farm_db_dev
      POSTGRES_USER: pig_farm_user
      POSTGRES_PASSWORD: pig_farm_password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    networks:
      - pig_farm_network_dev

  # Django Backend (Development mode with hot reload)
  backend:
    build:
      context: ./BE-farm/pig_farm
      dockerfile: Dockerfile
    container_name: pig_farm_backend_dev
    restart: unless-stopped
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://pig_farm_user:pig_farm_password@db:5432/pig_farm_db_dev
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,frontend,0.0.0.0
      - SECRET_KEY=dev-secret-key-not-for-production
      - CORS_ALLOWED_ORIGINS=http://localhost:8080,http://127.0.0.1:8080,http://localhost:5173,http://127.0.0.1:5173
    volumes:
      - ./BE-farm/pig_farm:/app
      - media_files_dev:/app/media
      - static_files_dev:/app/staticfiles
    ports:
      - "8000:8000"  # Backend port
    depends_on:
      - db
    networks:
      - pig_farm_network_dev
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput --clear &&
             python manage.py runserver 0.0.0.0:8000"

  # Frontend Development Server (Vite hot reload)
  frontend-dev:
    build:
      context: ./FE-farm
      dockerfile: Dockerfile.dev
      target: development
    container_name: pig_farm_frontend_dev
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./FE-farm:/app
      - /app/node_modules
    ports:
      - "8080:5173"  # Vite dev server mapped to port 8080
    depends_on:
      - backend
    networks:
      - pig_farm_network_dev

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: pig_farm_redis_dev
    restart: unless-stopped
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - redis_data_dev:/data
    networks:
      - pig_farm_network_dev

volumes:
  postgres_data_dev:
  redis_data_dev:
  media_files_dev:
  static_files_dev:

networks:
  pig_farm_network_dev:
    driver: bridge